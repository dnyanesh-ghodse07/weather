{"version":3,"sources":["components/Loading/Loading.module.css","components/chart/Chart.module.css","components/Weather/WeatherMain.module.css","graphql/query.js","Context/ContextProvider.js","components/Date/Date.js","assets/Spinner.svg","components/Loading/Loading.js","components/Weather/WeatherInfo.js","components/chart/Chart.js","components/Weather/WeatherHome.js","App.js","index.js","components/Weather/WeatherInfo.module.css"],"names":["module","exports","GET_WEATHER","gql","WeatherContext","createContext","WeatherProvider","children","useState","cityName","setCityName","showMore","setShowMore","showGraph","setShowGraph","forecast","setForecast","useLazyQuery","variables","name","getWeather","loading","data","error","url","useEffect","fetch","then","res","json","Provider","value","DateNow","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Loading","className","classes","src","Spinner","alt","WeatherInfo","weather","useContext","sunrise","city","toLocaleTimeString","sunset","console","log","weatherInfo","humi","icon","getCityByName","wind","speed","clouds","humidity","list","main","pressure","Chart","forecastDays","newDay","forEach","dateN","dt","push","labels","datasets","label","backgroundColor","borderColor","temp_max","temp_min","chart","WeatherApp","wrapper","container","search_box","type","placeholder","onChange","e","target","valid_name","dateLocation","location","country","summary","weatherbox","temp","Math","round","temperature","actual","desc","title","description","highLow","high","max","low","min","btn","onClick","graphBtn","client","ApolloClient","cache","InMemoryCache","uri","App","ApolloProvider","WeatherHome","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8327d35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__34Sjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__nJm6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WeatherMain_wrapper__3oZUp\",\"container\":\"WeatherMain_container__3DFUj\",\"main\":\"WeatherMain_main__3HTm4\",\"search_box\":\"WeatherMain_search_box__paZKh\",\"weatherbox\":\"WeatherMain_weatherbox__3rJ60\",\"location\":\"WeatherMain_location__26e6E\",\"date\":\"WeatherMain_date__2zxim\",\"temp\":\"WeatherMain_temp__E_ugD\",\"desc\":\"WeatherMain_desc__3UjE6\",\"weather\":\"WeatherMain_weather__166MH\",\"highLow\":\"WeatherMain_highLow__3Wf7d\",\"high\":\"WeatherMain_high__3BNpL\",\"low\":\"WeatherMain_low__3PBim\",\"cloud\":\"WeatherMain_cloud__1htcb\",\"btn\":\"WeatherMain_btn__3KK2A\",\"graphBtn\":\"WeatherMain_graphBtn__2YXxg\",\"valid_name\":\"WeatherMain_valid_name__1VJVH\",\"icon\":\"WeatherMain_icon__3x3Bp\"};","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_WEATHER = gql`\r\n  query getCityByName($name: String!) {\r\n    getCityByName(name: $name) {\r\n      name\r\n      country\r\n      coord {\r\n        lon\r\n        lat\r\n      }\r\n      weather {\r\n        summary {\r\n          icon\r\n          title\r\n          description\r\n        }\r\n        temperature {\r\n          actual\r\n          min\r\n          max\r\n          feelsLike\r\n        }\r\n        wind {\r\n          deg\r\n          speed\r\n        }\r\n        clouds {\r\n          all\r\n          visibility\r\n          humidity\r\n        }\r\n        timestamp\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GET_WEATHER } from \"../graphql/query\";\r\n\r\nexport const WeatherContext = createContext();\r\nexport const WeatherProvider = ({ children }) => {\r\n  const [cityName, setCityName] = useState(\"bangalore\");\r\n  const [showMore, setShowMore] = useState(false);\r\n  const [showGraph, setShowGraph] = useState(false);\r\n  const [forecast, setForecast] = useState({});\r\n\r\n  //weather data graphql\r\n  const [getWeather, { loading, data, error }] = useLazyQuery(GET_WEATHER, {\r\n    variables: {\r\n      name: cityName,\r\n    },\r\n  });\r\n\r\n  //forecast data\r\n  const API_KEY = \"f32cfa0133a992d042027732e48eae99\";\r\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${API_KEY}`;\r\n\r\n  useEffect(() => {\r\n    getWeather();\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setForecast(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        cityName,\r\n        setCityName,\r\n        loading,\r\n        data,\r\n        error,\r\n        showMore,\r\n        setShowMore,\r\n        showGraph,\r\n        setShowGraph,\r\n        forecast,\r\n        setForecast,\r\n      }}\r\n    >\r\n      {children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nfunction DateNow() {\r\n  const dateBuilder = (d) => {\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return <div>{dateBuilder(new Date())}</div>;\r\n}\r\n\r\nexport default DateNow;\r\n","export default __webpack_public_path__ + \"static/media/Spinner.adcee08f.svg\";","import React from \"react\";\r\nimport classes from \"./Loading.module.css\";\r\nimport Spinner from \"../../assets/Spinner.svg\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className={classes.loading}>\r\n      <img src={Spinner} alt=\"loading\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./WeatherInfo.module.css\";\r\nimport { WeatherContext } from \"../../Context/ContextProvider\";\r\nimport { FiSunrise, FiSunset } from \"react-icons/fi\";\r\nimport { WiHumidity } from \"react-icons/wi\";\r\nimport { GiPaperWindmill } from \"react-icons/gi\";\r\nimport { CgCompressV } from \"react-icons/cg\";\r\n\r\nfunction WeatherInfo() {\r\n  const weather = useContext(WeatherContext);\r\n\r\n  //timestamp conversion\r\n  const sunrise = new Date(\r\n    weather.forecast?.city.sunrise * 1000\r\n  ).toLocaleTimeString();\r\n  const sunset = new Date(\r\n    weather.forecast?.city.sunset * 1000\r\n  ).toLocaleTimeString();\r\n\r\n  console.log(weather.forecast);\r\n  return (\r\n    <div className={classes.weatherInfo}>\r\n      <div className={classes.humi}>\r\n        <li className={classes.icon}>\r\n          <span>\r\n            <GiPaperWindmill /> Wind Speed :\r\n          </span>\r\n          {weather.data?.getCityByName?.weather?.wind?.speed} m/s\r\n        </li>\r\n        <li className={classes.icon}>\r\n          <span>\r\n            <WiHumidity /> Humidity :\r\n          </span>\r\n          {weather.data?.getCityByName?.weather?.clouds?.humidity} g.kg\r\n          <sup>-1</sup>\r\n        </li>\r\n        <li className={classes.icon}>\r\n          <span>\r\n            <CgCompressV /> Pressure :\r\n          </span>\r\n          {weather.forecast?.list[0].main.pressure} Pa\r\n        </li>\r\n      </div>\r\n      <div>\r\n        <li className={classes.icon}>\r\n          <span>\r\n            <FiSunrise /> Sunrise :\r\n          </span>\r\n          {sunrise}\r\n        </li>\r\n        <li className={classes.icon}>\r\n          <span>\r\n            <FiSunset /> Sunset :\r\n          </span>\r\n          {sunset}\r\n        </li>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherInfo;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./Chart.module.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { WeatherContext } from \"../../Context/ContextProvider\";\r\n\r\nfunction Chart() {\r\n  const weather = useContext(WeatherContext);\r\n  const forecastDays = [\r\n    weather.forecast.list[7],\r\n    weather.forecast.list[15],\r\n    weather.forecast.list[23],\r\n    weather.forecast.list[31],\r\n    weather.forecast.list[39],\r\n  ];\r\n\r\n  console.log(forecastDays);\r\n  const newDay = [];\r\n  forecastDays.forEach((d) => {\r\n    const dateN = new Date(d.dt * 1000).getDate();\r\n    newDay.push(dateN);\r\n  });\r\n\r\n  const labels = [\r\n    newDay[0] + \" / 2021\",\r\n    newDay[1] + \" / 2021\",\r\n    newDay[2] + \" / 2021\",\r\n    newDay[3] + \" / 2021\",\r\n    newDay[4] + \" / 2021\",\r\n  ];\r\n\r\n  //chart data\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"High\",\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        data: [\r\n          forecastDays[0].main.temp_max - 273.15,\r\n          forecastDays[1].main.temp_max - 273.15,\r\n          forecastDays[2].main.temp_max - 273.15,\r\n          forecastDays[3].main.temp_max - 273.15,\r\n          forecastDays[4].main.temp_max - 273.15,\r\n        ],\r\n      },\r\n      {\r\n        label: \"Low\",\r\n        borderColor: \"#aba\",\r\n        backgroundColor: \"#123\",\r\n        data: [\r\n          forecastDays[0].main.temp_min - 273.15,\r\n          forecastDays[1].main.temp_min - 273.15,\r\n          forecastDays[2].main.temp_min - 273.15,\r\n          forecastDays[3].main.temp_min - 273.15,\r\n          forecastDays[4].main.temp_min - 273.15,\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={classes.chart}>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useContext } from \"react\";\r\nimport { WeatherContext } from \"../../Context/ContextProvider\";\r\nimport classes from \"./WeatherMain.module.css\";\r\nimport DateNow from \"../Date/Date\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport MoreInfo from \"./WeatherInfo\";\r\nimport Chart from \"../chart/Chart\";\r\n\r\nfunction WeatherApp() {\r\n  //context\r\n  const weather = useContext(WeatherContext);\r\n\r\n  const queryHandler = (e) => {\r\n    weather.setCityName(e.target.value);\r\n  };\r\n\r\n  const handleShowMore = () => {\r\n    weather.setShowMore(!weather.showMore);\r\n  };\r\n\r\n  const handleShowGraph = () => {\r\n    weather.setShowGraph(!weather.showGraph);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.container}>\r\n        <main className={classes.main}>\r\n          <div className={classes.search_box}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search Weather by city..\"\r\n              onChange={queryHandler}\r\n            />\r\n          </div>\r\n          {weather?.loading ? (\r\n            <Loading />\r\n          ) : weather?.data?.getCityByName == null ? (\r\n            <div className={classes.valid_name}>\r\n              <h3>Enter valid city name</h3>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <article>\r\n                <div className={classes.dateLocation}>\r\n                  <div className={classes.location}>\r\n                    {weather.data?.getCityByName?.name},\r\n                    {weather.data?.getCityByName?.country}\r\n                  </div>\r\n                  <div className={classes.date}>\r\n                    <DateNow />\r\n                  </div>\r\n                </div>\r\n                <div className={classes.icon}>\r\n                  <img\r\n                    src={`http://openweathermap.org/img/w/${weather.data?.getCityByName?.weather?.summary?.icon}.png`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className={classes.weatherbox}>\r\n                  <div className={classes.temp}>\r\n                    {Math.round(\r\n                      weather.data?.getCityByName?.weather?.temperature\r\n                        ?.actual - 273.15\r\n                    )}\r\n                    °c\r\n                  </div>\r\n                  <div className={classes.desc}>\r\n                    <h5>\r\n                      {weather.data?.getCityByName?.weather?.summary.title}\r\n                    </h5>\r\n                    <p>\r\n                      {\r\n                        weather.data?.getCityByName?.weather?.summary\r\n                          ?.description\r\n                      }\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </article>\r\n              <div className={classes.highLow}>\r\n                <div className={classes.high}>\r\n                  Todays's High :{\" \"}\r\n                  {Math.round(\r\n                    weather.data?.getCityByName?.weather?.temperature?.max -\r\n                      273.15\r\n                  )}\r\n                  °c\r\n                </div>\r\n                <div className={classes.low}>\r\n                  Todays's Low :{\" \"}\r\n                  {Math.round(\r\n                    weather.data?.getCityByName?.weather?.temperature?.min -\r\n                      273.15\r\n                  )}\r\n                  °c\r\n                </div>\r\n              </div>\r\n              {weather.showMore ? <MoreInfo /> : null}\r\n            </div>\r\n          )}\r\n          <div className={classes.btn}>\r\n            <button onClick={handleShowMore}>\r\n              {weather.showMore ? \"Hide Details\" : \"Show Details\"}\r\n            </button>\r\n            <button className={classes.graphBtn} onClick={handleShowGraph}>\r\n              {weather.showGraph ? \"Hide Graph\" : \"Show Graph\"}\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n      {weather.showGraph && <Chart />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherApp;\r\n","import React from \"react\";\nimport WeatherHome from \"./components/Weather/WeatherHome\";\nimport { WeatherProvider } from \"./Context/ContextProvider\";\nimport \"./App.css\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://graphql-weather-api.herokuapp.com/\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <WeatherProvider>\n        <WeatherHome />\n      </WeatherProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherInfo\":\"WeatherInfo_weatherInfo__2_64r\",\"icon\":\"WeatherInfo_icon__3cqAS\"};"],"sourceRoot":""}